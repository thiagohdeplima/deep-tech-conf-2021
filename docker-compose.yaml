version: "3.4"

networks:
  application: {}

services:
  database:
    networks:
    - application
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d appdb -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: user
    image: postgres:11.2-alpine

  rabbitmq:
    networks:
    - application
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl list_users"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
    - "8083:15672"
    image: rabbitmq:3-management 

  payments-api:
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - application
    build:
      context: 'payments-api'
    environment:
      AMQP_URL: amqp://guest:guest@rabbitmq

  sales-api:
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
    - application
    build:
      context: 'sales-api'
      args:
        MIX_ENV: dev
    ports:
    - 4000:4000
    environment:
      PORT: 4000
      MIX_ENV: dev
      AMQP_URL: amqp://guest:guest@rabbitmq
      DATABASE_URL: postgres://user@database/appdb
      SECRET_KEY_BASE: bXZz7kBMHcsksqYHkcwfEkFtg33BGHB5SJw4rAZR
